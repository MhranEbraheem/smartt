{"version":3,"sources":["Component/AddRoom.js","Component/Rooms.js","Component/Room.js","App.js","serviceWorker.js","index.js"],"names":["AddRoom","props","nameValid","e","setState","name","target","value","colorValid","color","selectType","type","state","style","onChange","this","placeholder","id","to","onClick","add","Component","Rooms","rooms","map","element","backgroundColor","height","width","fontSize","borderRadius","background","outline","Room","change","flag","show","addProduct","index","condition","products","smartSwitch","App","addRoom","n","t","c","length","alert","typeOfProduct","chekStero","tempProduct","push","i","indexOfRoom","indexOfProduct","className","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2410fcf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default class AddRoom extends Component {\r\n   \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            name:'',\r\n            type:'Kitchen',\r\n            color:'white'\r\n        }\r\n\r\n    }\r\n\r\n    nameValid = (e)=>{\r\n        this.setState({name:e.target.value});\r\n    }\r\n    colorValid = (e)=>{\r\n        this.setState({color:e.target.value});\r\n    }\r\n    selectType = (e)=>{\r\n        this.setState({type:e.target.value});\r\n    }\r\n   \r\n   \r\n   \r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 style={{color:'white'}}>add room</h3>\r\n                <input onChange={this.nameValid} type=\"text\" placeholder='name'/><br/>\r\n                <select onChange={this.selectType} id=\"\">\r\n                    <option value=\"Kitchen\">חדר מטבח</option>\r\n                    <option value=\"bedroom\">חדר שינה</option>\r\n                    <option value=\"Bathroom\">חדר אמבטיה</option>\r\n                </select><br/>\r\n                <input onChange={this.colorValid} type=\"color\" placeholder='color'/><br/>\r\n               <Link to='/'> <button onClick={()=>{this.props.add(this.state.name,this.state.type,this.state.color)}}>create room</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Rooms(props) {\r\n    return (\r\n        <div>\r\n            \r\n           {props.rooms.map((element)=>{\r\n               return(\r\n               <Link to={`/room${element.name}`}><button style={{backgroundColor:element.color,height:'45px',width:'40px',fontSize:'20px',borderRadius:'50px'}}>{element.name}</button></Link>\r\n               )\r\n           })} \r\n\r\n\r\n          <Link to='/addroom'><button style={{background:'#2e5894',color:'white',borderRadius:'30px',outline:'none',height:'65px',width:'60px',fontSize:'55px'}}>+</button></Link>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Room extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            flag:false,\r\n            type:'Lamp',\r\n            condition:'off',\r\n        }\r\n    }\r\n    \r\n    change = ()=>{\r\n        this.setState({flag:!this.state.flag})\r\n    }\r\n    selectType = (e)=>{\r\n        this.setState({type:e.target.value});\r\n    }\r\n\r\n    show = ()=>{\r\n        if((this.state.flag === true)&&(this.props.type === 'bedroom' || this.props.type === 'Kitchen')){\r\n            return (\r\n                <div>\r\n                    <select onChange={this.selectType}>\r\n                        <option value=\"Lamp\">Lamp</option>\r\n                        <option value=\"Air condition\">Air condition</option>\r\n                        <option value=\"Stereo\">Stereo</option>\r\n                </select>\r\n                <button style={{background:'#2e5894',color:'white',borderRadius:'30px',outline:'none'}} onClick={()=>{this.props.addProduct(this.props.index,this.state.type)}}> Add Product </button>\r\n                </div>\r\n            )\r\n        } else if((this.state.flag === true)&&(this.props.type === 'Bathroom')){\r\n            return (\r\n                <div>\r\n                    <select onChange={this.selectType}>\r\n                        <option value=\"Lamp\">Lamp</option>\r\n                        <option value=\"Air condition\">Air condition</option>\r\n                        <option value=\"Stereo\">Stereo</option>\r\n                        <option value=\"Boiler\">Boiler</option>\r\n                </select>\r\n                <button style={{background:'#2e5894',color:'white',borderRadius:'30px',outline:'none'}} onClick={()=>{this.props.addProduct(this.props.index,this.state.type)}}> Add Product </button>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <button style={{background:'#2e5894',color:'white',borderRadius:'30px',outline:'none',height:'65px',width:'70px',fontSize:'55px'}} onClick={this.change}>+</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render(){\r\n    return (\r\n        <div>\r\n          <h5 style={{color:'white'}}>  name: {this.props.name} </h5>\r\n          <h5 style={{color:'white'}}>  type: {this.props.type} </h5>\r\n\r\n        {this.props.products.map((element , index)=>{\r\n            let condition = element.condition?'green':'red';\r\n            return(\r\n            <button onClick={()=>{this.props.smartSwitch(this.props.index,index)}} style={{backgroundColor:condition}} >{element.type}</button>\r\n            ) })}\r\n        {this.show()}\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}","import React, { Component } from 'react'\nimport { HashRouter as Router , Route , Switch} from \"react-router-dom\"\nimport './App.css';\nimport AddRoom from './Component/AddRoom'\nimport Rooms from './Component/Rooms'\nimport Room from './Component/Room'\n\n\nexport default class App extends Component {\n \n  state={\n    rooms:[],\n    color:''\n  }\n \n  addRoom = (n,t,c)=>{\n    if(n.length > 5 || n.length == 0 ){\n      alert ('room name should be 5 characters')\n    }else{\n      this.setState({rooms:[...this.state.rooms,{name:n,type:t,color:c,products:[]}]});\n\n\n    }\n\n  }\n \n  addProduct = (index,typeOfProduct)=>{\n    if(this.state.rooms[index].products.length <5){\n      if(this.chekStero(index,typeOfProduct) == true){\n        let tempProduct = {condition:false,type:typeOfProduct};\n        this.state.rooms[index].products.push(tempProduct);\n        this.setState({rooms:[...this.state.rooms]});\n      }else{\n        alert('Stereo is alredy exsict')\n      }\n    }else{\n      alert('you can add only 5 products')\n    }\n  \n  \n}\nchekStero = (index,typeOfProduct) =>{\n  if(typeOfProduct != 'Stereo'){\n    return true\n  }\n  for(let i = 0; i<this.state.rooms[index].products.length; i++){\n    if(this.state.rooms[index].products[i].type == 'Stereo'){\n      return false\n    }\n  }\n  return true\n\n}\n\n  smartSwitch = (indexOfRoom,indexOfProduct)=>{\n    this.state.rooms[indexOfRoom].products[indexOfProduct].condition = !this.state.rooms[indexOfRoom].products[indexOfProduct].condition ; \n    this.setState({rooms:[...this.state.rooms]});\n  }\n \n  render() {\n    return (\n      <div className='App'>\n        <h1 style={{color:'white'}}>Smart House</h1>\n        <Router>\n          <Switch>\n              <Route exact path='/' component={()=>{return <Rooms rooms={this.state.rooms}/>}} />\n              <Route exact path='/addroom' component={()=>{return <AddRoom add={this.addRoom} />}} />\n              {this.state.rooms.map((element,index)=>{\n                return(\n                  <Route exact path={`/room${element.name}`} component={()=>{return <Room name={element.name} type={element.type} addProduct={this.addProduct} index={index} products={element.products} smartSwitch={this.smartSwitch}/>}} />\n                )\n              })}\n          \n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}